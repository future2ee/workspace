--1. 춘 기술 대학교의 학과 이름과계열 표시
--   출력 헤더에는 "학과명","계열" 표시
SELECT DEPARTMENT_NAME "학과 명",CATEGORY "계열"
FROM TB_DEPARTMENT;

--2
SELECT DEPARTMENT_NAME||'의 정원은 '|| CAPACITY ||'명 입니다.'
FROM TB_DEPARTMENT;

--3."국어국문학과"에 다니는 여학생 중 현재 휴학중인 여학생을 찾아라
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '001'
AND ABSENCE_YN = 'Y'
AND SUBSTR(STUDENT_SSN,8,1) ='2';

--4. 도서 장기 연체자들 이름 게시 
SELECT STUDENT_NAME 
FROM TB_STUDENT 
WHERE STUDENT_NO IN('A513079','A513090','A513091','A513110','A513119'); 

--5. 입학정원이 20명 이상 30명 이하인 학과들이 학과 이름과 계열을 출력
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY >=20 AND CAPACITY <= 30 ;

--6. 
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7.
SELECT DEPARTMENT_NO
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;


--8.
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9.
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
ORDER BY CATEGORY;

--10.
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE SUBSTR(ENTRANCE_DATE,1,2)='02'
AND ABSENCE_YN = 'N'
AND STUDENT_ADDRESS LIKE '%전주%' ;

-------------------------------------------------------------------------------
-- SQL02_SELECT(Function)
-- 1. 영문학과 (학과번호 002) 학번, 이름, 입학년도 입학년도가 빠른 순서로 작성
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, ENTRANCE_DATE 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO =002
ORDER BY ENTRANCE_DATE;

--2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

--3. @@
SELECT PROFESSOR_NAME 교수이름, 
       FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(PROFESSOR_SSN,1,6),'YYYYMMDD'))/12) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8,1) =1;

--4. 
SELECT SUBSTR(PROFESSOR_NAME,2,2) 이름
FROM TB_PROFESSOR;

--5. 
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT (YEAR FROM ENTRANCE_DATE)- EXTRACT(YEAR FROM( TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RR/MM/DD')))>=20;
-- EXTRACT (YESR FROM TO_DATE('19'||SUBSTR(PROFESSOR_SSN,1,6),'YYYYMMDD')) >19

--6. 2020년 크리스마스 무슨 요일?
SELECT TO_CHAR(TO_DATE(20201225),'DY')
FROM DUAL;

--7. 
SELECT TO_DATE('99/10/11','YY/MM/DD'),
       TO_DATE('49/10/11','YY/MM/DD'),
       TO_DATE('99/10/11','RR/MM/DD'),
       TO_DATE('49/10/11','RR/MM/DD')
       FROM DUAL;

--8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';

--9. A517178 한아름 학생 학점 총 평점, 점수는 반올림하여 소수점 이라 한 자리
SELECT ROUND(AVG(POINT),1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

--10. 학과별 학생 수 "학과번호","학생수(명)"
SELECT DEPARTMENT_NO 학과번호, COUNT(*) "학생수(명)"
FROM TB_STUDENT호
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

--11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--12.
SELECT SUBSTR(TERM_NO,1,4) 년도, ROUND(AVG(POINT),1) "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 년도;


--13. @@
SELECT DEPARTMENT_NO, COUNT(DECODE(ABSENCE_YN, 'Y','Y','NO',0)) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

SELECT DEPARTMENT_NO, SUM(DECODE(ABSENCE_YN, 'Y', 1, 0)) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

--14. 
-- 춘 대학교에 다니는 동명이인 학생들의 이름을 찾고자 한다
-- 어떤 SQL 문장을 사용하면 가능하겠는가?
SELECT STUDENT_NAME 동일인물, COUNT(*) "동명인 수"
FROM TB_STUDENT S1
GROUP BY STUDENT_NAME
HAVING COUNT(*) >1
ORDER BY STUDENT_NAME;
                      

--15.
SELECT SUBSTR(TERM_NO,1,4)년도, SUBSTR(TERM_NO,5,6)학기, ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP (SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO,5,6))
ORDER BY 년도;


-------------------------------------------------------------------------------
--1.
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

--2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

--3.
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '경기도%'OR STUDENT_ADDRESS LIKE'강원도%')
AND STUDENT_NO LIKE '9%'
ORDER BY STUDENT_NAME;

--4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '005'
ORDER BY PROFESSOR_SSN ;

--5.
SELECT STUDENT_NO, POINT
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
AND TERM_NO = '200402'
ORDER BY POINT DESC;

--6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

--7. 
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

--8.
--TB_CLASS_PROFESSOR : 과목별 교수의 정보를 저장한 테이블(과목 코드, 학과 코드)
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);
--TB_CLADD 와  TB_PROFESSOR 테이블이 공통으로
-- DEPARTMENT_NO 컬럼을 가지고 있다 해서 이를 이용해서 JOIN을 하면 안됨!
/*
TB_CLASS와 TB_PROFESSOR 테이블을 조회 해보면
같은 컬럼 값을 가지는 DEPARTMENT_NO 가 많이 존재함
--> 이랄 경우
    TV_CLAA의 DEPARTMENT_NO와
    TB_PROFESSOR와 DEPARTMENT_NO컬럼 값들이
    서로 연결되기 위한 모든 경우의 수를 만들어냄(곱집합이 되어버림)
*/

--오라클
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C, TB_CLASS_PROFESSOR CP, TB_PROFESSOR P
WHERE C.CLASS_NO = CP.CLASS_NO
AND CP.PROFESSOR_NO = P.PROFESSOR_NO;

--9.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO) 
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
WHERE CATEGORY = '인문사회'
ORDER BY CLASS_NAME ;

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR P USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (P.DEPARTMENT_NO = D.DEPARTMENT_NO) 
WHERE CATEGORY = '인문사회';

-- 오라클
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C, TB_CLASS_PROFESSOR CP, TB_PROFESSOR P, TB_DEPARTMENT D
WHERE C.CLASS_NO = CP.CLASS_NO
AND CP.PROFESSOR_NO = P.PROFESSOR_NO
AND P.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE CATEGORY = '인문사회';



—10.
SELECT STUDENT_NO 학번, STUDENT_NAME"학생 이름", ROUND(AVG(POINT),1) "전체 평점"
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO
;








